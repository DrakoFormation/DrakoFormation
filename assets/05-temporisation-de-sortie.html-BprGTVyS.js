import{aj as n,ak as e,am as s,al as t,aq as p}from"./app-BkblVdII.js";const i={};function l(o,a){return p(),e("div",null,a[0]||(a[0]=[s("h1",{id:"la-temporisation-de-sortie",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#la-temporisation-de-sortie"},[s("span",null,"La temporisation de sortie")])],-1),s("nav",{class:"table-of-contents"},[s("ul")],-1),s("p",null,"En vidéo :",-1),s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{src:"https://www.loom.com/embed/ee7221772dc34d6090b7e76f0cc89e53",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:"",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})],-1),t(`<p>Dans certains cas (la plupart, en fait), on veut éviter que l&#39;affichage se fasse au fur et à mesure que le HTML est calculé.</p><p>Ceci permet, par exemple, de rediriger l&#39;utilisateur avec <code>header()</code>, alors que du HTML a déjà été rendu !</p><ul><li><code>ob_start()</code> sert à démarrer la temporisation de sortie</li><li><code>ob_end_flush()</code> retourne le contenu rendu jusque-là (il est nécessaire de l&#39;afficher avec un <code>echo</code> ou autre fonction d&#39;affichage)</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">ob_start();</span>
<span class="line">?&gt;</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Du HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"><span class="token comment">// On est redirigé vers la page, malgré le HTML au-dessus.</span></span>
<span class="line"><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Location: une-autre-page.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">echo</span> <span class="token function">ob_end_flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sans temporisation de sortie, on aurait une erreur :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Du HTML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"><span class="token comment">// On a une erreur, on ne peut pas faire une redirection après avoir affiché du HTML</span></span>
<span class="line"><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Location: une-autre-page.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const r=n(i,[["render",l],["__file","05-temporisation-de-sortie.html.vue"]]),u=JSON.parse('{"path":"/php/05-temporisation-de-sortie.html","title":"La temporisation de sortie","lang":"fr-FR","frontmatter":{"date":"2023-01-11T00:00:00.000Z"},"headers":[],"git":{"updatedTime":1736283917000},"filePathRelative":"php/05-temporisation-de-sortie.md"}');export{r as comp,u as data};
