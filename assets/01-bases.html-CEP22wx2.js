import{aj as i,ak as o,am as s,an as e,ao as t,al as l,ap as c,aq as r,ar as p}from"./app-BkblVdII.js";const u={},d={class:"table-of-contents"};function m(k,n){const a=c("router-link");return r(),o("div",null,[n[7]||(n[7]=s("h1",{id:"bases-du-php",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#bases-du-php"},[s("span",null,"Bases du PHP")])],-1)),s("nav",d,[s("ul",null,[s("li",null,[e(a,{to:"#un-script-php"},{default:t(()=>n[0]||(n[0]=[p("Un script PHP")])),_:1})]),s("li",null,[e(a,{to:"#commentaires"},{default:t(()=>n[1]||(n[1]=[p("Commentaires")])),_:1})]),s("li",null,[e(a,{to:"#variables"},{default:t(()=>n[2]||(n[2]=[p("Variables")])),_:1})]),s("li",null,[e(a,{to:"#constantes"},{default:t(()=>n[3]||(n[3]=[p("Constantes")])),_:1})]),s("li",null,[e(a,{to:"#types"},{default:t(()=>n[4]||(n[4]=[p("Types")])),_:1}),s("ul",null,[s("li",null,[e(a,{to:"#tableaux"},{default:t(()=>n[5]||(n[5]=[p("Tableaux")])),_:1})]),s("li",null,[e(a,{to:"#manipuler-les-tableaux"},{default:t(()=>n[6]||(n[6]=[p("Manipuler les tableaux")])),_:1})])])])])]),n[8]||(n[8]=l(`<p>Pour chaque section de ce cours, vous trouverez une série de petits exercices, à réaliser dans un projet dédié (idéalement, versionnez-le !). Nous allons réaliser un mini-site de QCM, tout au long de ce cours.</p><p>Dans un premier temps, créez un dossier dans votre environnement de travail (exemple <code>C:\\wamp\\www\\exercices</code>) et créez un fichier <code>index.php</code> dans ce dossier. Ajoutez-y une structure HTML classique dans laquelle nous allons travailler.</p><p>Fichier <code>index.php</code> de départ :</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Exercices<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>QCM<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        </span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="un-script-php" tabindex="-1"><a class="header-anchor" href="#un-script-php"><span>Un script PHP</span></a></h2><p>En vidéo :</p>`,6)),n[9]||(n[9]=s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{src:"https://www.loom.com/embed/2b0103e886da43269245ba58934e0065",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:"",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})],-1)),n[10]||(n[10]=l(`<p>Les fichiers de PHP ont l&#39;extension <code>.php</code> et peuvent contenir du HTML aussi bien que du PHP. Un script PHP (que ce soit un fichier entier ou une portion de code) se trouve entre <code>&lt;?php</code> et <code>?&gt;</code>.</p><p>Un exemple de Php dans un fichier HTML :</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fr<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Un fichier d&#39;exemple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    </span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Affichage de la date : <span class="token prolog">&lt;?php echo date(&#39;d/m/Y H:i:s&#39;); ?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dans un fichier PHP seul :</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;p&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;d/m/Y H:i:s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;/p&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="commentaires" tabindex="-1"><a class="header-anchor" href="#commentaires"><span>Commentaires</span></a></h2><p>En vidéo :</p>`,7)),n[11]||(n[11]=s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{src:"https://www.loom.com/embed/3250bf737da7426194f22493a53f32b4",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:"",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})],-1)),n[12]||(n[12]=l(`<p>Vous pouvez ajouter des éléments en commentaire : visible uniquement dans le code source, et non dans le rendu final. L&#39;intérêt est de donner des informations supplémentaires aux autres développeurs (ou au &quot;vous&quot; du futur) sur ce que fait le code, prévenir de certains problèmes, etc.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token comment">// Une ligne de texte commenté, vous pouvez mettre n&#39;importe quoi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line"> * Un commentaire multiligne </span>
<span class="line"> * (il DOIT commencé par /* et terminer par */</span><span class="token punctuation">)</span></span>
<span class="line"> <span class="token operator">*</span><span class="token operator">/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="variables" tabindex="-1"><a class="header-anchor" href="#variables"><span>Variables</span></a></h2><p>La <a href="https://www.php.net/manual/fr/language.variables.php" target="_blank" rel="noopener noreferrer">documentation PHP</a></p><p>En vidéo :</p>`,5)),n[13]||(n[13]=s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{src:"https://www.loom.com/embed/49e12ca2e66c4ac8b79f705921d35e28",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:"",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})],-1)),n[14]||(n[14]=l(`<p>Une variable sert à contenir une valeur. Le but de la variable est de nous permettre de manipuler cette valeur (opérations mathématiques, la transmettre plus loin dans le code, etc.)</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token comment">// Ici on parle de déclaration (on définit le nom de la variable)</span></span>
<span class="line"><span class="token comment">// et d&#39;initialisation (on lui donne une valeur de départ)</span></span>
<span class="line"><span class="token variable">$unNombre</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// On peut modifier la valeur contenue dans notre variable de différentes manières,</span></span>
<span class="line"><span class="token comment">// comme des opérations mathématiques, dont voici quelques raccourcis</span></span>
<span class="line"><span class="token variable">$unNombre</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// $unNombre = $unNombre + 1;</span></span>
<span class="line"><span class="token variable">$unNombre</span> <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// $unNombre = $unNombre + 2;</span></span>
<span class="line"><span class="token variable">$unNombre</span> <span class="token operator">*=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// $unNombre = $unNombre * 3;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$unTexte</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Un texte&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// L&#39;opérateur . permet de concaténer 2 chaînes de caractères</span></span>
<span class="line"><span class="token variable">$unTexte</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">&#39; de test&#39;</span><span class="token punctuation">;</span> <span class="token comment">// $unTexte = $unTexte . &#39; de test&#39;;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="constantes" tabindex="-1"><a class="header-anchor" href="#constantes"><span>Constantes</span></a></h2><p>La <a href="https://www.php.net/manual/fr/language.constants.php" target="_blank" rel="noopener noreferrer">documentation PHP</a></p><p>En vidéo :</p>`,5)),n[15]||(n[15]=s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{src:"https://www.loom.com/embed/07b90132b4a14729b9a98c31d0d76828",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:"",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})],-1)),n[16]||(n[16]=l(`<p>Nous n&#39;allons pratiquement pas nous servir de ces constantes dans ce cours, mais il est utile de savoir comment les utiliser (pour un site Wordpress, par exemple).</p><p>Une constante est toujours écrite en screaming snake case (tout en majuscule, les mots séparés par des <code>_</code>). Comme une variable, une constante contient une valeur, mais qui <strong>ne peut pas être modifiée</strong>.</p><p>L&#39;intérêt est de conserver en mémoire une valeur qui peut être utilisée à plusieurs endroits dans le code (nom d&#39;éléments par page dans des listes, un texte répété à travers le site, etc.) et que l&#39;on veut éviter de répéter.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token comment">// Déclaration et initialisation d&#39;une constante</span></span>
<span class="line"><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;UNE_CONSTANTE&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;et sa valeur&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Utilisation de la valeur de la constante</span></span>
<span class="line"><span class="token keyword">echo</span> <span class="token constant">UNE_CONSTANTE</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="types" tabindex="-1"><a class="header-anchor" href="#types"><span>Types</span></a></h2><p>La <a href="https://www.php.net/manual/fr/language.types.php" target="_blank" rel="noopener noreferrer">documentation PHP</a></p><p>En vidéo :</p>`,7)),n[17]||(n[17]=s("div",{style:{position:"relative","padding-bottom":"56.25%",height:"0"}},[s("iframe",{src:"https://www.loom.com/embed/f9aa8834e50f41e1af97a3ab7443dffe",frameborder:"0",webkitallowfullscreen:"",mozallowfullscreen:"",allowfullscreen:"",style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"}})],-1)),n[18]||(n[18]=l(`<ul><li>integer <code>12</code> pour représenter les nombres (entiers)</li><li>float <code>25.45</code> pour représenter les nombres à virgule</li><li>string <code>&#39;un texte&#39;</code> ou <code>&quot;un texte&quot;</code> pour représenter les textes</li><li>bool <code>true</code> ou <code>false</code> pour représenter les valeurs logiques (booléennes)</li><li>null <code>NULL</code> ou <code>null</code> pour représenter une valeur vide</li><li>array <code>[1, 2, 3]</code> pour représenter des ensembles de données (en Php, les données sont quelconques, elles n&#39;ont pas besoin d&#39;être du même type)</li><li>Object <code>new PDO()</code> pour représenter des données plus complexes</li></ul><h3 id="tableaux" tabindex="-1"><a class="header-anchor" href="#tableaux"><span>Tableaux</span></a></h3><p>La <a href="https://www.php.net/manual/fr/book.array.php" target="_blank" rel="noopener noreferrer">documentation PHP sur les tableaux</a></p><p>En PHP, les entrées des tableaux peuvent être de types différents</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$monTableau</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword type-declaration">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$monTableau</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token keyword type-declaration">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// La syntaxe courte, à préférer</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Et il en va de même pour les clés</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$mesProduits</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token number">0</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bonnet en coton&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;uneEntrée&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="manipuler-les-tableaux" tabindex="-1"><a class="header-anchor" href="#manipuler-les-tableaux"><span>Manipuler les tableaux</span></a></h3><h4 id="acceder-a-une-entree" tabindex="-1"><a class="header-anchor" href="#acceder-a-une-entree"><span>Accéder à une entrée</span></a></h4><p>On utilise alors l&#39;index correspondant à la ligne qu&#39;on veut récupérer.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$mesProduits</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token number">0</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bonnet en coton&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;uneEntrée&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token variable">$unProduit</span> <span class="token operator">=</span> <span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$unAutreProduit</span> <span class="token operator">=</span> <span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;uneEntrée&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ajouter-une-entree" tabindex="-1"><a class="header-anchor" href="#ajouter-une-entree"><span>Ajouter une entrée</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$mesProduits</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token number">0</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;uneEntrée&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// On peut ajouter une entrée à un index précis</span></span>
<span class="line"><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;un texte de test&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// ou dire à PHP de gérer l&#39;index (ici, le texte sera ajouté à l&#39;index 2)</span></span>
<span class="line"><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;un texte de test&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note : le dernier exemple ci-dessus (<code>$mesProduits[] = $value</code>) est équivalent à <code>.push(value)</code> de Javascript. Un index numérique est calculé (PHP récupère le dernier index numérique, et l&#39;incrémente pour avoir le nouvel index) et <code>$value</code> est ajouté à cet index.</p><h4 id="modifier-une-entree" tabindex="-1"><a class="header-anchor" href="#modifier-une-entree"><span>Modifier une entrée</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$mesProduits</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token number">0</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;uneEntrée&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// On modifie l&#39;élément à l&#39;index 0</span></span>
<span class="line"><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;no more foo&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="supprimer-une-entree" tabindex="-1"><a class="header-anchor" href="#supprimer-une-entree"><span>Supprimer une entrée</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$mesProduits</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token number">0</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;uneEntrée&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="fonctions-utiles" tabindex="-1"><a class="header-anchor" href="#fonctions-utiles"><span>Fonctions utiles</span></a></h4><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token variable">$mesProduits</span> <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token number">0</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;foo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;vide&#39;</span>      <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token number">1</span>           <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;bar&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string single-quoted-string">&#39;uneEntrée&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// renvoie true si l&#39;entrée existe</span></span>
<span class="line"><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// true</span></span>
<span class="line"><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">666</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment">// renvoie true si l&#39;entrée n&#39;est pas définie ou est une valeur vide (0, &#39;&#39;, null, [], false, etc.)</span></span>
<span class="line"><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>
<span class="line"><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;vide&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// supprimer une entrée</span></span>
<span class="line"><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// compter le nombre d&#39;éléments dans un tableau</span></span>
<span class="line"><span class="token variable">$compte</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$mesProduits</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20))])}const b=i(u,[["render",m],["__file","01-bases.html.vue"]]),g=JSON.parse('{"path":"/php/01-bases.html","title":"Bases du PHP","lang":"fr-FR","frontmatter":{"date":"2023-01-11T00:00:00.000Z"},"headers":[{"level":2,"title":"Un script PHP","slug":"un-script-php","link":"#un-script-php","children":[]},{"level":2,"title":"Commentaires","slug":"commentaires","link":"#commentaires","children":[]},{"level":2,"title":"Variables","slug":"variables","link":"#variables","children":[]},{"level":2,"title":"Constantes","slug":"constantes","link":"#constantes","children":[]},{"level":2,"title":"Types","slug":"types","link":"#types","children":[{"level":3,"title":"Tableaux","slug":"tableaux","link":"#tableaux","children":[]},{"level":3,"title":"Manipuler les tableaux","slug":"manipuler-les-tableaux","link":"#manipuler-les-tableaux","children":[]}]}],"git":{"updatedTime":1736283917000},"filePathRelative":"php/01-bases.md"}');export{b as comp,g as data};
